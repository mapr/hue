#!/bin/bash

export MAPR_HOME=${MAPR_HOME:-"/opt/mapr"}
export HUE_VERSION=${HUE_VERSION:-$(cat "${MAPR_HOME}/hue/hueversion")}
export HUE_HOME=${HUE_HOME:-"${MAPR_HOME}/hue/hue-${HUE_VERSION}"}

CMD=${0##*/}

HUE_PID_SERVER="${MAPR_HOME}/pid/hue.pid"
HUE_PID_KT_RENEWER="${MAPR_HOME}/pid/hue-kr-renewer.pid"
HUE_LOG_DIR="${HUE_HOME}/logs"
HUE_LOG_SERVER="${HUE_LOG_DIR}/hue.out"
HUE_LOG_KT_RENEWER="${HUE_LOG_DIR}/kt_renewer.out"

mkdir -p "${HUE_LOG_DIR}"


kerberos_enabled() {
    grep -q -E '^[[:blank:]]*hue_keytab=.+$' "${HUE_HOME}/desktop/conf/hue.ini" && \
    grep -q -E '^[[:blank:]]*hue_principal=.+$' "${HUE_HOME}/desktop/conf/hue.ini"
}


case $1 in
    start)
        exitval=0
        if [ -e "$HUE_PID_SERVER" ] && kill -0 $(cat "$HUE_PID_SERVER") 2>/dev/null; then
            pid=$(cat "$HUE_PID_SERVER")
            echo "Hue is running as process $pid. Stop it first."
            exitval=1
        else
            cd "${HUE_HOME}"
            nohup "${HUE_HOME}/bin/hue" runcpserver >> "$HUE_LOG_SERVER" 2>&1 &
            pid=$!
            echo $pid > "$HUE_PID_SERVER"
            echo "$(date) Starting Hue, pid $pid" >> "$HUE_LOG_SERVER"
            echo "Starting Hue, pid $pid"

        fi
        if kerberos_enabled; then
            if [ -e "$HUE_PID_KT_RENEWER" ] && kill -0 $(cat "$HUE_PID_KT_RENEWER") 2>/dev/null; then
                pid=$(cat "$HUE_PID_KT_RENEWER")
                echo "Hue kt_renewer is running as process $pid. Stop it first."
            else
                cd "${HUE_HOME}"
                nohup "${HUE_HOME}/bin/hue" kt_renewer >> "$HUE_LOG_KT_RENEWER" 2>&1 &
                pid=$!
                echo $pid > "$HUE_PID_KT_RENEWER"
                echo "$(date) Starting Hue kt_renewer, pid $pid" >> "$HUE_LOG_KT_RENEWER"
                echo "Starting Hue kt_renewer, pid $pid"
            fi
        fi
        exit $exitval
        ;;
    stop)
        exitval=0
        if ! [ -e "$HUE_PID_SERVER" ] || ! kill -0 $(cat "$HUE_PID_SERVER") 2>/dev/null; then
            echo "Hue is not running"
            exitval=1
        else
            pid=$(cat "$HUE_PID_SERVER")
            kill $pid
            rm "$HUE_PID_SERVER"
            echo "$(date) Stopping Hue, pid $pid" >> "$HUE_LOG_SERVER"
            echo "Stopping Hue, pid $pid"
        fi
        if kerberos_enabled; then
            if ! [ -e "$HUE_PID_KT_RENEWER" ] || ! kill -0 $(cat "$HUE_PID_KT_RENEWER"); then
                echo "Hue kt_renewer is not running"
            else
                pid=$(cat "$HUE_PID_KT_RENEWER")
                kill $pid
                rm "$HUE_PID_KT_RENEWER"
                echo "$(date) Stopping Hue kt_renewer, pid $pid" >> "$HUE_LOG_KT_RENEWER"
                echo "Stopping Hue kt_renewer, pid $pid"
            fi
        fi
        exit $exitval
        ;;
    status)
        exitval=0
        if [ -e "$HUE_PID_SERVER" ] && kill -0 $(cat "$HUE_PID_SERVER") &>/dev/null; then
            pid=$(cat "$HUE_PID_SERVER")
            echo "Hue is running, pid $pid"
        else
            echo "Hue is not running"
            exitval=1
        fi
        if kerberos_enabled; then
            if [ -e "$HUE_PID_KT_RENEWER" ] && kill -0 $(cat "$HUE_PID_KT_RENEWER"); then
                pid=$(cat "$HUE_PID_KT_RENEWER")
                echo "Hue kt_renewer is running, pid $pid"
            else
                echo "Hue kt_renewer is not running"
            fi
        fi
        exit $exitval
        ;;
    *)
        echo "${CMD} supports only start|stop|status arguments"
        exit 1
esac
