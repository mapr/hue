#!/bin/bash

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


before_upgrade() {
    #
    # Backup of old configuration files
    #
    OLD_TIMESTAMP=$1
    OLD_VERSION=$(echo $OLD_TIMESTAMP | grep -o '^[0-9]*\.[0-9]*\.[0-9]*')

    OLD_DIR="__PREFIX__/hue/hue-${OLD_VERSION}"
    BCK_DIR="__PREFIX__/hue/hue-${OLD_TIMESTAMP}"

    CONF_SRC_DST="${OLD_DIR}/desktop/conf/ ${BCK_DIR}/desktop/
${OLD_DIR}/desktop/desktop.db ${BCK_DIR}/desktop/
${OLD_DIR}/bin/env.d/ ${BCK_DIR}/bin/"
    echo "$CONF_SRC_DST" | while read CONF_SRC CONF_DST; do
        mkdir -p "$CONF_DST"
        if [ -e "$CONF_SRC" ]; then
            cp -r "$CONF_SRC" "$CONF_DST"
        fi
    done

    #
    # MHUE-550: Check for Hue processes that weren't stopped succesfully / affects mapr-hue-4.11.0.0
    #
    # Wait for graceful stop first
    ghost_pid=$(ps ax -o pid:1,command | grep '/[o]pt/mapr/hue.*run.*server' | cut -d ' ' -f 1 | head -n1)
    if [ -n "$ghost_pid" ]; then
        kill -2 "$ghost_pid"
        sleep 2
    fi
    ghost_pids=$(ps ax -o pid:1,command | grep '/[o]pt/mapr/hue.*run.*server' | cut -d ' ' -f 1)
    for pid in $ghost_pids; do
        echo "Unable to stop hue runcpserver, pid ${pid}, forcefully stopping!"
        kill -9 "$pid"
    done
}

before_install() {
    :
}


case "$1" in
    install)
        before_install
    ;;

    upgrade)
        before_install
        before_upgrade "$2"
    ;;

    abort-upgrade)
    ;;

    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0
