/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_mapr_security_JNISecurity */

#ifndef _Included_com_mapr_security_JNISecurity
#define _Included_com_mapr_security_JNISecurity
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    Encrypt
 * Signature: ([B[BLcom/mapr/security/JNISecurity/MutableErr;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_mapr_security_JNISecurity_Encrypt
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jobject);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    Decrypt
 * Signature: ([B[BLcom/mapr/security/JNISecurity/MutableErr;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_mapr_security_JNISecurity_Decrypt
  (JNIEnv *, jclass, jbyteArray, jbyteArray, jobject);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    SetKeyFileInternal
 * Signature: (ILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_mapr_security_JNISecurity_SetKeyFileInternal
  (JNIEnv *, jclass, jint, jstring);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    GetKeyInternal
 * Signature: (ILcom/mapr/security/JNISecurity/MutableErr;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_mapr_security_JNISecurity_GetKeyInternal
  (JNIEnv *, jclass, jint, jobject);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    GenerateTicketAndKeyInternal
 * Signature: (ILjava/lang/String;I[IJJZLcom/mapr/security/JNISecurity/MutableErr;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_mapr_security_JNISecurity_GenerateTicketAndKeyInternal
  (JNIEnv *, jclass, jint, jstring, jint, jintArray, jlong, jlong, jboolean, jobject);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    GenerateTicketAndKeyUsingServerKeyInternal
 * Signature: (I[BLjava/lang/String;I[IJJZLcom/mapr/security/JNISecurity/MutableErr;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_mapr_security_JNISecurity_GenerateTicketAndKeyUsingServerKeyInternal
  (JNIEnv *, jclass, jint, jbyteArray, jstring, jint, jintArray, jlong, jlong, jboolean, jobject);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    RenewTicketAndKeyInternal
 * Signature: (I[BJLcom/mapr/security/JNISecurity/MutableErr;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_mapr_security_JNISecurity_RenewTicketAndKeyInternal
  (JNIEnv *, jclass, jint, jbyteArray, jlong, jobject);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    DecryptTicketInternal
 * Signature: ([BLcom/mapr/security/JNISecurity/MutableErr;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_mapr_security_JNISecurity_DecryptTicketInternal
  (JNIEnv *, jclass, jbyteArray, jobject);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    SetTicketAndKeyInternal
 * Signature: (ILjava/lang/String;[B)I
 */
JNIEXPORT jint JNICALL Java_com_mapr_security_JNISecurity_SetTicketAndKeyInternal
  (JNIEnv *, jclass, jint, jstring, jbyteArray);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    SetTicketAndKeyFileInternal
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_mapr_security_JNISecurity_SetTicketAndKeyFileInternal
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    SetKeyInternal
 * Signature: (I[B)I
 */
JNIEXPORT jint JNICALL Java_com_mapr_security_JNISecurity_SetKeyInternal
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    GetTicketAndKeyForClusterInternal
 * Signature: (ILjava/lang/String;Lcom/mapr/security/JNISecurity/MutableErr;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_mapr_security_JNISecurity_GetTicketAndKeyForClusterInternal
  (JNIEnv *, jclass, jint, jstring, jobject);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    Initialize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_mapr_security_JNISecurity_Initialize
  (JNIEnv *, jclass);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    IsSecurityEnabled
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mapr_security_JNISecurity_IsSecurityEnabled
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    GenerateRandomNumber
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_mapr_security_JNISecurity_GenerateRandomNumber
  (JNIEnv *, jclass);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    GenerateRandomBlock
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_com_mapr_security_JNISecurity_GenerateRandomBlock
  (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    EncodeDataForWritingToKeyFile
 * Signature: ([BLcom/mapr/security/JNISecurity/MutableErr;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_mapr_security_JNISecurity_EncodeDataForWritingToKeyFile
  (JNIEnv *, jclass, jbyteArray, jobject);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    DecodeDataFromKeyFile
 * Signature: ([BLcom/mapr/security/JNISecurity/MutableErr;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_mapr_security_JNISecurity_DecodeDataFromKeyFile
  (JNIEnv *, jclass, jbyteArray, jobject);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    GetHash
 * Signature: (I[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_mapr_security_JNISecurity_GetHash
  (JNIEnv *, jclass, jint, jbyteArray);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    GetUserTicketAndKeyFileLocation
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_mapr_security_JNISecurity_GetUserTicketAndKeyFileLocation
  (JNIEnv *, jclass);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    IsKerberosEnabled
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mapr_security_JNISecurity_IsKerberosEnabled
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    IsReplayDetectionDisabled
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_com_mapr_security_JNISecurity_IsReplayDetectionDisabled
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    GetCldbHttpsPort
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_mapr_security_JNISecurity_GetCldbHttpsPort
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    GetCldbPrincipal
 * Signature: (Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_mapr_security_JNISecurity_GetCldbPrincipal
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    IsParsingDone
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_mapr_security_JNISecurity_IsParsingDone
  (JNIEnv *, jclass);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    SetParsingDone
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_mapr_security_JNISecurity_SetParsingDone
  (JNIEnv *, jclass);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    SetClusterOption
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_mapr_security_JNISecurity_SetClusterOption
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    GetClusterOption
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_mapr_security_JNISecurity_GetClusterOption
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    PopulateServerKeyAndTicket
 * Signature: ([JLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_mapr_security_JNISecurity_PopulateServerKeyAndTicket
  (JNIEnv *, jclass, jlongArray, jstring);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    BlacklistAndCloseConnections
 * Signature: ([I[JZ)V
 */
JNIEXPORT void JNICALL Java_com_mapr_security_JNISecurity_BlacklistAndCloseConnections
  (JNIEnv *, jclass, jintArray, jlongArray, jboolean);

/*
 * Class:     com_mapr_security_JNISecurity
 * Method:    RemoveFromBlacklist
 * Signature: ([I)V
 */
JNIEXPORT void JNICALL Java_com_mapr_security_JNISecurity_RemoveFromBlacklist
  (JNIEnv *, jclass, jintArray);

#ifdef __cplusplus
}
#endif
#endif
